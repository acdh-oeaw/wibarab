import type { StringParams } from '@stefanprobst/next-route-manifest'
import type { PropsWithChildren } from 'react'

import { ArticlePageLayout } from '@/components/blog/ArticlePageLayout'
import type { ArticleMetadata } from '@/lib/data/types'

/**
 * This page does note generate routes directly. It is used:
 * - to create an entry in the autogenerated route manifest
 * - to wrap article pages via mdx webpack loader
 *
 * That's why `getStaticPaths` is not needed, why the page component
 * accepts a `children` prop, and why `metadata` is in scope (it is added by
 * `@stefanprobst/remark-extract-yaml-frontmatter/mdx`).
 */

export namespace ArticlePage {
  export type PathParamsInput = {
    id: string
  }
  export type PathParams = StringParams<PathParamsInput>
  export type SearchParamsInput = never
  export interface Props {
    /** Added by `remark` plugin. */
    metadata: ArticleMetadata
  }
}

export default function ArticlePage(props: PropsWithChildren<ArticlePage.Props>): JSX.Element {
  const metadata = props.metadata
  return <ArticlePageLayout metadata={metadata}>{props.children}</ArticlePageLayout>
}
